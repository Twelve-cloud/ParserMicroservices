services:
  pgadmin:
    image: dpage/pgadmin4:8.9
    hostname: pgadmin
    container_name: pgadmin
    user: pgadmin
    entrypoint: ["/entrypoint.sh"]
    command: ["true"]
    ports:
      - name: pgadmin-port
        target: ${PGADMIN_PORT}
        published: ${PGADMIN_PUBLIC_PORT}
        host_ip: ${PGADMIN_HOST_IP}
        protocol: tcp
        mode: host
    env_file:
      - path: ./infrastructure/common/compose/env/pgadmin/.env
        required: true
    volumes:
      - type: bind
        source: ./infrastructure/common/compose/configs/pgadmin/pgadmin.py
        target: /pgadmin4/config_local.py
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/common/compose/configs/pgadmin/servers.json
        target: /pgadmin4/servers.json
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/common/compose/certs/pgadmin/server.crt
        target: /certs/server.cert
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/common/compose/certs/pgadmin/server.key
        target: /certs/server.key
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/common/compose/certs/ca/server-ca.crt
        target: /home/pgadmin/.postgresql/root.crt
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--spider",
          "--no-check-certificate",
          "https://${PGADMIN_HOST}:${PGADMIN_PORT}/misc/ping",
        ]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 30s
      start_interval: 10s
    logging:
      driver: json-file
      options:
        labels-regex: "^.+"
    deploy:
      resources:
        limits:
          cpus: ${PGADMIN_CPUS_LIMIT}
          memory: ${PGADMIN_MEMORY_LIMIT}
        reservations:
          cpus: ${PGADMIN_CPUS_RESERVATION}
          memory: ${PGADMIN_MEMORY_RESERVATION}
    networks:
      pgadmin-network:
        ipv4_address: ${PGADMIN_IP_ADDRESS}
      parser-postgres-network:
    depends_on:
      parser-postgres:
        restart: true
        condition: service_healthy
        required: true
    pull_policy: missing
    restart: always

networks:
  pgadmin-network:
    name: pgadmin-network
    driver: bridge
    internal: false
    external: false
    attachable: false
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: ${PGADMIN_NETWORK_SUBNET}
          ip_range: ${PGADMIN_NETWORK_IP_RANGE}
          gateway: ${PGADMIN_NETWORK_GATEWAY}
  parser-postgres-network:
    external: true
