version: '3.7'

services:
  postgres:
    image: postgres:16.3-alpine3.20
    hostname: postgres
    container_name: postgres
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=4GB"
      - "-c"
      - "wal_buffers=1GB"
      - "-c"
      - "max_wal_size=4GB"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "wal_writer_delay=400ms"
      - "-c"
      - "synchronous_commit=off"
      - "-c"
      - "autovacuum_naptime=5min"
      - "-c"
      - "autovacuum_max_workers=8"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "max_worker_processes=8"
      - "-c"
      - "max_parallel_workers=8"
      - "-c"
      - "max_parallel_workers_per_gather=4"
      - "-c"
      - "max_parallel_maintenance_workers=4"
    expose:
      - ${POSTGRES_PORT}
    env_file:
      - ./env/.env.postgres
    volumes:
      - ./data/postgres:/data/db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      parsnet:
        ipv4_address: 192.168.10.7
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    hostname: pgadmin
    container_name: pgadmin
    ports:
      - 8003:${PGADMIN_LISTEN_PORT}
    env_file:
      - ./env/.env.postgres
    healthcheck:
      test: ["CMD-SHELL", "nc -z mongo-express ${MONGO_EXPRESS_PORT} || exit -1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      parsnet:
        ipv4_address: 192.168.10.8
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
