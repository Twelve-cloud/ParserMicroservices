version: '3.7'

services:
  zookeeper:
    user: root
    image: confluentinc/cp-zookeeper:7.4.3
    hostname: zookeeper
    container_name: zookeeper
    expose:
      - ${ZOOKEEPER_PORT}
    env_file:
      - ./env/.env.kafka
    volumes:
      - ./.data/zookeeper-data:/var/lib/zookeeper/data
      - ./.data/zookeeper-logs:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD-SHELL", "nc -z zookeeper ${ZOOKEEPER_PORT} || exit -1"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      parsnet:
        ipv4_address: 192.168.10.2
    restart: always

  kafka:
    user: root
    image: confluentinc/cp-kafka:7.4.3
    hostname: kafka
    container_name: kafka
    expose:
      - ${KAFKA_PORT}
    env_file:
      - ./env/.env.kafka
    volumes:
      - ./.data/kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "nc -z kafka ${KAFKA_PORT} || exit -1"]
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      parsnet:
        ipv4_address: 192.168.10.3
    links:
      - zookeeper
    depends_on:
      zookeeper:
        condition: service_healthy
    restart: always

  kafka-ui:
    user: root
    image: provectuslabs/kafka-ui:v0.7.2
    hostname: kafka-ui
    container_name: kafka-ui
    ports:
      - 8001:${KAFKA_UI_PORT}
    env_file:
      - ./env/.env.kafka
    healthcheck:
      test: ["CMD-SHELL", "nc -z kafka-ui ${KAFKA_UI_PORT} || exit -1"]
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      parsnet:
        ipv4_address: 192.168.10.4
    links:
      - kafka
    depends_on:
      kafka:
        condition: service_healthy
    restart: always
