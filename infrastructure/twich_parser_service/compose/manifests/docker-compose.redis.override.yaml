services:
  parser-redis:
    image: redis:7.4.0-alpine
    hostname: parser-redis
    container_name: parser-redis
    user: redis
    entrypoint: ["/usr/local/bin/docker-entrypoint.sh"]
    command:
      [
        "redis-server",
        "/etc/redis/redis.conf",
        "--user ${REDIS_USERNAME} on >${REDIS_PASSWORD} ~* &* +@all",
        "--user default off nopass -@all",
        "--requirepass ${REDIS_PASSWORD}",
      ]
    expose: ["${REDIS_PORT}/tcp", "${REDIS_TLS_PORT}/tcp"]
    env_file:
      - path: ./infrastructure/twich_parser_service/compose/env/redis/.env
        required: true
    volumes:
      - type: bind
        source: ./.compose-data/twich_parser_service/redis-data
        target: /var/lib/redis/data
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/twich_parser_service/compose/configs/redis
        target: /etc/redis
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/twich_parser_service/compose/certs/redis
        target: /etc/ssl/redis
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/common/compose/certs/ca/client-ca.crt
        target: /etc/ssl/ca/client-ca.crt
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --user ${REDIS_USERNAME} --pass ${REDIS_PASSWORD} ping"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 30s
      start_interval: 10s
    logging:
      driver: json-file
      options:
        labels-regex: "^.+"
    deploy:
      resources:
        limits:
          cpus: ${REDIS_CPUS_LIMIT}
          memory: ${REDIS_MEMORY_LIMIT}
        reservations:
          cpus: ${REDIS_CPUS_RESERVATION}
          memory: ${REDIS_MEMORY_RESERVATION}
    networks:
      parser-redis-network:
        ipv4_address: ${REDIS_IP_ADDRESS}
    pull_policy: missing
    restart: always

networks:
  parser-redis-network:
    name: parser-redis-network
    driver: bridge
    internal: false
    external: false
    attachable: false
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: ${REDIS_NETWORK_SUBNET}
          ip_range: ${REDIS_NETWORK_IP_RANGE}
          gateway: ${REDIS_NETWORK_GATEWAY}
