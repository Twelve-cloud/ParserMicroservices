services:
  postgres:
    image: postgres:16.3-alpine3.20
    hostname: postgres
    container_name: postgres
    user: postgres
    command: ["postgres", "-c", "config_file=/etc/postgres/postgres.conf"]
    ports:
      - name: postgres-port
        target: ${POSTGRES_PORT}
        published: ${POSTGRES_PUBLIC_PORT}
        host_ip: ${POSTGRES_HOST_IP}
        protocol: tcp
        mode: host
    env_file:
      - path: ./infrastructure/twich_parser_service/compose/env/postgres/.env
        required: true
    volumes:
      - type: bind
        source: ./.compose-data/twich_parser_service/postgres-data
        target: /var/lib/postgres/data
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/twich_parser_service/compose/configs/postgres
        target: /etc/postgres
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/twich_parser_service/compose/certs/postgres
        target: /etc/ssl/postgres
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
      - type: bind
        source: ./infrastructure/common/compose/certs/ca/client-ca.crt
        target: /etc/ssl/ca/client-ca.crt
        read_only: true
        bind:
          propagation: rprivate
          create_host_path: true
          selinux: Z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
      start_interval: 10s
    logging:
      driver: json-file
      options:
        labels-regex: "^.+"
    deploy:
      resources:
        limits:
          cpus: ${POSTGRES_CPUS_LIMIT}
          memory: ${POSTGRES_MEMORY_LIMIT}
        reservations:
          cpus: ${POSTGRES_CPUS_RESERVATION}
          memory: ${POSTGRES_MEMORY_RESERVATION}
    networks:
      postgres-network:
        ipv4_address: ${POSTGRES_IP_ADDRESS}
    pull_policy: missing
    restart: always

networks:
  postgres-network:
    name: postgres-network
    driver: bridge
    internal: false
    external: false
    attachable: false
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: ${POSTGRES_NETWORK_SUBNET}
          ip_range: ${POSTGRES_NETWORK_IP_RANGE}
          gateway: ${POSTGRES_NETWORK_GATEWAY}
